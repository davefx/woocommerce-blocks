(self.webpackChunk_woocommerce_block_library=self.webpackChunk_woocommerce_block_library||[]).push([[8505],{"./assets/js/base/components/country-input/stories/index.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,WithError:()=>WithError,__namedExportsOrder:()=>__namedExportsOrder,default:()=>index_stories});var react=__webpack_require__("./node_modules/react/index.js"),use_dispatch=__webpack_require__("./node_modules/@wordpress/data/build-module/components/use-dispatch/use-dispatch.js"),validation=__webpack_require__("./assets/js/data/validation/index.ts"),build_module=__webpack_require__("./node_modules/@wordpress/i18n/build-module/index.js"),html_entities_build_module=__webpack_require__("./node_modules/@wordpress/html-entities/build-module/index.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),with_instance_id=__webpack_require__("./node_modules/@wordpress/compose/build-module/higher-order/with-instance-id/index.js"),build=__webpack_require__("./node_modules/wordpress-components/build/index.js"),components=__webpack_require__("./packages/components/index.ts"),object=__webpack_require__("./assets/js/types/type-guards/object.ts"),use_select=__webpack_require__("./node_modules/@wordpress/data/build-module/components/use-select/index.js"),jsx_runtime=(__webpack_require__("./assets/js/base/components/combobox/style.scss"),__webpack_require__("./node_modules/react/jsx-runtime.js"));const Combobox=({id,className,label,onChange,options,value,required=!1,errorMessage=(0,build_module.__)("Please select a value.","woo-gutenberg-products-block"),errorId:incomingErrorId,instanceId="0",autoComplete="off"})=>{const controlRef=(0,react.useRef)(null),controlId=id||"control-"+instanceId,errorId=incomingErrorId||controlId,{setValidationErrors,clearValidationError}=(0,use_dispatch.Z)(validation.M),error=(0,use_select.Z)((select=>select(validation.M).getValidationError(errorId)));return(0,react.useEffect)((()=>(!required||value?clearValidationError(errorId):setValidationErrors({[errorId]:{message:errorMessage,hidden:!0}}),()=>{clearValidationError(errorId)})),[clearValidationError,value,errorId,errorMessage,required,setValidationErrors]),(0,jsx_runtime.jsxs)("div",{id:controlId,className:classnames_default()("wc-block-components-combobox",className,{"is-active":value,"has-error":error?.message&&!error?.hidden}),ref:controlRef,children:[(0,jsx_runtime.jsx)(build.ComboboxControl,{className:"wc-block-components-combobox-control",label,onChange,onFilterValueChange:filterValue=>{if(filterValue.length){const activeElement=(0,object.Kn)(controlRef.current)?controlRef.current.ownerDocument.activeElement:void 0;if(activeElement&&(0,object.Kn)(controlRef.current)&&controlRef.current.contains(activeElement))return;const normalizedFilterValue=filterValue.toLocaleUpperCase(),foundValue=options.find((option=>option.value.toLocaleUpperCase()===normalizedFilterValue));if(foundValue)return void onChange(foundValue.value);const foundOption=options.find((option=>option.label.toLocaleUpperCase().startsWith(normalizedFilterValue)));foundOption&&onChange(foundOption.value)}},options,value:value||"",allowReset:!1,autoComplete,"aria-invalid":error?.message&&!error?.hidden}),(0,jsx_runtime.jsx)(components.UB,{propertyName:errorId})]})};Combobox.displayName="Combobox",Combobox.__docgenInfo={description:"Wrapper for the WordPress ComboboxControl which supports validation.",methods:[],displayName:"Combobox",props:{required:{defaultValue:{value:"false",computed:!1},required:!1,tsType:{name:"boolean"},description:""},errorMessage:{defaultValue:{value:"__(\n\t'Please select a value.',\n\t'woo-gutenberg-products-block'\n)",computed:!0},required:!1,tsType:{name:"union",raw:"string | undefined",elements:[{name:"string"},{name:"undefined"}]},description:""},instanceId:{defaultValue:{value:"'0'",computed:!1},required:!1,tsType:{name:"string"},description:""},autoComplete:{defaultValue:{value:"'off'",computed:!1},required:!1,tsType:{name:"string"},description:""},className:{required:!1,tsType:{name:"string"},description:""},errorId:{required:!0,tsType:{name:"union",raw:"string | null",elements:[{name:"string"},{name:"null"}]},description:""},id:{required:!0,tsType:{name:"string"},description:""},label:{required:!0,tsType:{name:"string"},description:""},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"( filterValue: string ) => void",signature:{arguments:[{name:"filterValue",type:{name:"string"}}],return:{name:"void"}}},description:""},options:{required:!0,tsType:{name:"Array",elements:[{name:"ComboboxControlOption"}],raw:"ComboboxControlOption[]"},description:""},value:{required:!0,tsType:{name:"string"},description:""}}};const combobox=(0,with_instance_id.Z)(Combobox);"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["assets/js/base/components/combobox/index.tsx"]={name:"Combobox",docgenInfo:Combobox.__docgenInfo,path:"assets/js/base/components/combobox/index.tsx"});__webpack_require__("./assets/js/base/components/country-input/style.scss");const CountryInput=({className,countries,id,label,onChange,value="",autoComplete="off",required=!1,errorId,errorMessage=(0,build_module.__)("Please select a country","woo-gutenberg-products-block")})=>{const options=(0,react.useMemo)((()=>Object.entries(countries).map((([countryCode,countryName])=>({value:countryCode,label:(0,html_entities_build_module.S)(countryName)})))),[countries]);return(0,jsx_runtime.jsx)("div",{className:classnames_default()(className,"wc-block-components-country-input"),children:(0,jsx_runtime.jsx)(combobox,{id,label,onChange,options,value,errorId,errorMessage,required,autoComplete})})};CountryInput.displayName="CountryInput",CountryInput.__docgenInfo={description:"",methods:[],displayName:"CountryInput",props:{value:{defaultValue:{value:"''",computed:!1},required:!1},autoComplete:{defaultValue:{value:"'off'",computed:!1},required:!1},required:{defaultValue:{value:"false",computed:!1},required:!1},errorMessage:{defaultValue:{value:"__(\n\t'Please select a country',\n\t'woo-gutenberg-products-block'\n)",computed:!0},required:!1}}};const country_input=CountryInput;"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["assets/js/base/components/country-input/country-input.tsx"]={name:"CountryInput",docgenInfo:CountryInput.__docgenInfo,path:"assets/js/base/components/country-input/country-input.tsx"});var blocks=__webpack_require__("./assets/js/settings/blocks/index.ts");const BillingCountryInput=props=>(0,jsx_runtime.jsx)(country_input,{countries:blocks.DK,...props});BillingCountryInput.displayName="BillingCountryInput",BillingCountryInput.__docgenInfo={description:"",methods:[],displayName:"BillingCountryInput"};"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["assets/js/base/components/country-input/billing-country-input.tsx"]={name:"BillingCountryInput",docgenInfo:BillingCountryInput.__docgenInfo,path:"assets/js/base/components/country-input/billing-country-input.tsx"});const ShippingCountryInput=props=>(0,jsx_runtime.jsx)(country_input,{countries:blocks.mO,...props});ShippingCountryInput.displayName="ShippingCountryInput",ShippingCountryInput.__docgenInfo={description:"",methods:[],displayName:"ShippingCountryInput"};"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["assets/js/base/components/country-input/shipping-country-input.tsx"]={name:"ShippingCountryInput",docgenInfo:ShippingCountryInput.__docgenInfo,path:"assets/js/base/components/country-input/shipping-country-input.tsx"});const index_stories={title:"Base Components/CountryInput",component:CountryInput,args:{countries:{AX:"&#197;land Islands",AF:"Afghanistan",AL:"Albania",DZ:"Algeria",AS:"American Samoa",AD:"Andorra",AO:"Angola",AI:"Anguilla",AQ:"Antarctica",AG:"Antigua and Barbuda",AR:"Argentina",AM:"Armenia",AW:"Aruba",AU:"Australia",AT:"Austria",AZ:"Azerbaijan",BS:"Bahamas",BH:"Bahrain",BD:"Bangladesh",BB:"Barbados",BY:"Belarus",PW:"Belau",BE:"Belgium",BZ:"Belize",BJ:"Benin",BM:"Bermuda",BT:"Bhutan",BO:"Bolivia",BQ:"Bonaire, Saint Eustatius and Saba",BA:"Bosnia and Herzegovina",BW:"Botswana",BV:"Bouvet Island",BR:"Brazil",IO:"British Indian Ocean Territory",BN:"Brunei",BG:"Bulgaria",BF:"Burkina Faso",BI:"Burundi",KH:"Cambodia",CM:"Cameroon",CA:"Canada",CV:"Cape Verde",KY:"Cayman Islands",CF:"Central African Republic",TD:"Chad",CL:"Chile",CN:"China",CX:"Christmas Island",CC:"Cocos (Keeling) Islands",CO:"Colombia",KM:"Comoros",CG:"Congo (Brazzaville)",CD:"Congo (Kinshasa)",CK:"Cook Islands",CR:"Costa Rica",HR:"Croatia",CU:"Cuba",CW:"Cura&ccedil;ao",CY:"Cyprus",CZ:"Czech Republic",DK:"Denmark",DJ:"Djibouti",DM:"Dominica",DO:"Dominican Republic",EC:"Ecuador",EG:"Egypt",SV:"El Salvador",GQ:"Equatorial Guinea",ER:"Eritrea",EE:"Estonia",ET:"Ethiopia",FK:"Falkland Islands",FO:"Faroe Islands",FJ:"Fiji",FI:"Finland",FR:"France",GF:"French Guiana",PF:"French Polynesia",TF:"French Southern Territories",GA:"Gabon",GM:"Gambia",GE:"Georgia",DE:"Germany",GH:"Ghana",GI:"Gibraltar",GR:"Greece",GL:"Greenland",GD:"Grenada",GP:"Guadeloupe",GU:"Guam",GT:"Guatemala",GG:"Guernsey",GN:"Guinea",GW:"Guinea-Bissau",GY:"Guyana",HT:"Haiti",HM:"Heard Island and McDonald Islands",HN:"Honduras",HK:"Hong Kong",HU:"Hungary",IS:"Iceland",IN:"India",ID:"Indonesia",IR:"Iran",IQ:"Iraq",IE:"Ireland",IM:"Isle of Man",IL:"Israel",IT:"Italy",CI:"Ivory Coast",JM:"Jamaica",JP:"Japan",JE:"Jersey",JO:"Jordan",KZ:"Kazakhstan",KE:"Kenya",KI:"Kiribati",KW:"Kuwait",KG:"Kyrgyzstan",LA:"Laos",LV:"Latvia",LB:"Lebanon",LS:"Lesotho",LR:"Liberia",LY:"Libya",LI:"Liechtenstein",LT:"Lithuania",LU:"Luxembourg",MO:"Macao",MG:"Madagascar",MW:"Malawi",MY:"Malaysia",MV:"Maldives",ML:"Mali",MT:"Malta",MH:"Marshall Islands",MQ:"Martinique",MR:"Mauritania",MU:"Mauritius",YT:"Mayotte",MX:"Mexico",FM:"Micronesia",MD:"Moldova",MC:"Monaco",MN:"Mongolia",ME:"Montenegro",MS:"Montserrat",MA:"Morocco",MZ:"Mozambique",MM:"Myanmar",NA:"Namibia",NR:"Nauru",NP:"Nepal",NL:"Netherlands",NC:"New Caledonia",NZ:"New Zealand",NI:"Nicaragua",NE:"Niger",NG:"Nigeria",NU:"Niue",NF:"Norfolk Island",KP:"North Korea",MK:"North Macedonia",MP:"Northern Mariana Islands",NO:"Norway",OM:"Oman",PK:"Pakistan",PS:"Palestinian Territory",PA:"Panama",PG:"Papua New Guinea",PY:"Paraguay",PE:"Peru",PH:"Philippines",PN:"Pitcairn",PL:"Poland",PT:"Portugal",PR:"Puerto Rico",QA:"Qatar",RE:"Reunion",RO:"Romania",RU:"Russia",RW:"Rwanda",ST:"S&atilde;o Tom&eacute; and Pr&iacute;ncipe",BL:"Saint Barth&eacute;lemy",SH:"Saint Helena",KN:"Saint Kitts and Nevis",LC:"Saint Lucia",SX:"Saint Martin (Dutch part)",MF:"Saint Martin (French part)",PM:"Saint Pierre and Miquelon",VC:"Saint Vincent and the Grenadines",WS:"Samoa",SM:"San Marino",SA:"Saudi Arabia",SN:"Senegal",RS:"Serbia",SC:"Seychelles",SL:"Sierra Leone",SG:"Singapore",SK:"Slovakia",SI:"Slovenia",SB:"Solomon Islands",SO:"Somalia",ZA:"South Africa",GS:"South Georgia/Sandwich Islands",KR:"South Korea",SS:"South Sudan",ES:"Spain",LK:"Sri Lanka",SD:"Sudan",SR:"Suriname",SJ:"Svalbard and Jan Mayen",SZ:"Swaziland",SE:"Sweden",CH:"Switzerland",SY:"Syria",TW:"Taiwan",TJ:"Tajikistan",TZ:"Tanzania",TH:"Thailand",TL:"Timor-Leste",TG:"Togo",TK:"Tokelau",TO:"Tonga",TT:"Trinidad and Tobago",TN:"Tunisia",TR:"Turkey",TM:"Turkmenistan",TC:"Turks and Caicos Islands",TV:"Tuvalu",UG:"Uganda",UA:"Ukraine",AE:"United Arab Emirates",GB:"United Kingdom (UK)",US:"United States (US)",UM:"United States (US) Minor Outlying Islands",UY:"Uruguay",UZ:"Uzbekistan",VU:"Vanuatu",VA:"Vatican",VE:"Venezuela",VN:"Vietnam",VG:"Virgin Islands (British)",VI:"Virgin Islands (US)",WF:"Wallis and Futuna",EH:"Western Sahara",YE:"Yemen",ZM:"Zambia",ZW:"Zimbabwe"},autoComplete:"off",id:"country",label:"Countries: ",required:!1},argTypes:{countries:{control:!1},options:{table:{disable:!0}},value:{control:!1}},decorators:[StoryComponent=>(0,jsx_runtime.jsx)(StoryComponent,{})]},Template=args=>{const[selectedCountry,selectCountry]=(0,react.useState)(""),{clearValidationError,showValidationError}=(0,use_dispatch.Z)(validation.M);return(0,react.useEffect)((()=>{showValidationError("country")}),[showValidationError]),(0,jsx_runtime.jsx)(CountryInput,{...args,onChange:value=>function updateCountry(country){clearValidationError("country"),selectCountry(country)}(value),value:selectedCountry})};Template.displayName="Template";const Default=Template.bind({}),WithError=Template.bind({});WithError.args={errorId:"country",errorMessage:"Please select a country",required:!0},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"args => {\n  const [selectedCountry, selectCountry] = useState<CountryCode | ''>('');\n  const {\n    clearValidationError,\n    showValidationError\n  } = useDispatch(VALIDATION_STORE_KEY);\n  useEffect(() => {\n    showValidationError('country');\n  }, [showValidationError]);\n  function updateCountry(country: CountryCode) {\n    clearValidationError('country');\n    selectCountry(country);\n  }\n  return <CountryInput {...args} onChange={value => updateCountry((value as CountryCode))} value={selectedCountry} />;\n}",...Default.parameters?.docs?.source}}},WithError.parameters={...WithError.parameters,docs:{...WithError.parameters?.docs,source:{originalSource:"args => {\n  const [selectedCountry, selectCountry] = useState<CountryCode | ''>('');\n  const {\n    clearValidationError,\n    showValidationError\n  } = useDispatch(VALIDATION_STORE_KEY);\n  useEffect(() => {\n    showValidationError('country');\n  }, [showValidationError]);\n  function updateCountry(country: CountryCode) {\n    clearValidationError('country');\n    selectCountry(country);\n  }\n  return <CountryInput {...args} onChange={value => updateCountry((value as CountryCode))} value={selectedCountry} />;\n}",...WithError.parameters?.docs?.source}}};const __namedExportsOrder=["Default","WithError"]},"./assets/js/base/components/combobox/style.scss":()=>{},"./assets/js/base/components/country-input/style.scss":()=>{}}]);